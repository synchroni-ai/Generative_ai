"TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"FTC_001","Functional","Verify Patient Registration","Ensure that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in the registration form with valid details. 3. Submit the registration form.","Submit the registration form.","Valid patient details (e.g., name, email, password)","The patient should be successfully registered and redirected to the login page.","P","High"
"FTC_002","Functional","Verify Invalid Patient Registration","Ensure that the system handles invalid inputs during patient registration.","None","1. Navigate to the registration page. 2. Fill in the registration form with invalid details (e.g., missing required fields). 3. Submit the registration form.","Submit the registration form with invalid details.","Invalid patient details (e.g., missing name, invalid email format)","The system should display error messages for the invalid fields and prevent registration.","N","High"
"FTC_003","Functional","Verify Doctor Login","Ensure that a doctor can successfully log in to the application.","The doctor must be registered in the system.","1. Navigate to the login page. 2. Enter valid doctor credentials (username and password). 3. Click the login button.","Enter valid doctor credentials and log in.","Valid doctor credentials","The doctor should be successfully logged in and redirected to the doctor dashboard.","P","High"
"FTC_004","Functional","Verify Invalid Doctor Login","Ensure that the system handles invalid login attempts for doctors.","None","1. Navigate to the login page. 2. Enter invalid doctor credentials (e.g., incorrect password). 3. Click the login button.","Enter invalid doctor credentials and attempt to log in.","Invalid doctor credentials","The system should display an error message indicating invalid credentials and prevent login.","N","High"
"FTC_005","Functional","Verify Booking an Appointment","Ensure that a patient can successfully book an appointment with a diagnostic center.","The patient must be logged in.","1. Navigate to the appointment booking page. 2. Search for available time slots. 3. Select a specific time slot. 4. Confirm the appointment.","Book an appointment with a diagnostic center.","Available time slot details","The system should confirm the appointment and calculate the waiting time.","P","High"
"NFTC_001","Non-Functional","Validate System Response Time Under Load","Measure the system's response time when multiple users are accessing the application simultaneously.","The application should be deployed in a staging environment.","1. Use a load testing tool to simulate 1000 concurrent users. 2. Monitor the system's response time for key functionalities such as login, appointment booking, and report viewing. 3. Record the average response time for each functionality.","Simulate load and monitor response times.","None","The average response time for each functionality should be within acceptable limits (e.g., less than 3 seconds).","P","High"
"NFTC_002","Non-Functional","Test Access Control for Different User Roles","Verify that users can only access functionalities permitted by their roles.","User accounts for Patient, Doctor, and Diagnostic Center roles should be created.","1. Log in as a Patient and attempt to access Doctor and Diagnostic Center functionalities. 2. Log in as a Doctor and attempt to access Patient and Diagnostic Center functionalities. 3. Log in as a Diagnostic Center and attempt to access Patient and Doctor functionalities.","Attempt to access restricted functionalities.","User credentials for different roles.","Access should be denied for functionalities not permitted by the user's role.","N","High"
"NFTC_003","Non-Functional","Verify Inactivity Timeout","Ensure that the system logs out users after a period of inactivity.","A user should be logged into the application.","1. Log in to the application. 2. Remain inactive for the specified timeout period (e.g., 15 minutes). 3. Attempt to perform an action that requires authentication.","Remain inactive and attempt an authenticated action.","User credentials.","The user should be prompted to log in again.","P","Medium"
"NFTC_004","Non-Functional","Check System Performance with Increased User Load","Assess the system's performance as the number of users increases.","The application should be deployed in a staging environment.","1. Start with 100 concurrent users and gradually increase to 1000 users. 2. Monitor system performance metrics such as CPU usage, memory usage, and response time. 3. Record any performance degradation or system failures.","Gradually increase user load and monitor performance.","None","The system should handle the increased load without significant performance degradation or failures.","P","High"
"NFTC_005","Non-Functional","Ensure Data Integrity During Concurrent Updates","Verify that data remains accurate and consistent when multiple users update the same information simultaneously.","Multiple user accounts should be created.","1. User A and User B log in and attempt to update the same patient record simultaneously. 2. Monitor the system to ensure that only one update is applied and the other is rejected or queued.","Simultaneously update the same data.","Patient record data.","Only one update should be applied, and the system should handle concurrent updates gracefully.","P","High"
"STC_001","Security","Validate User Login with Correct Credentials","Verify that a user can successfully log in with valid credentials.","User account exists in the system.","1. Navigate to the login page. 2. Enter the valid username and password. 3. Click the login button.","Logging in with valid credentials.","Valid username and password.","User is successfully logged in and redirected to the dashboard.","P","High"
"STC_002","Security","Prevent Login with Invalid Credentials","Ensure that a user cannot log in with invalid credentials.","User account exists in the system.","1. Navigate to the login page. 2. Enter an invalid username and/or password. 3. Click the login button.","Attempting to log in with invalid credentials.","Invalid username and/or password.","Error message is displayed, and the user is not logged in.","N","High"
"STC_003","Security","Test for SQL Injection in Login Form","Verify that the system is protected against SQL injection attacks via the login form.","None","1. Navigate to the login page. 2. Enter SQL injection payloads in the username and/or password fields (e.g., ' OR '1'='1). 3. Click the login button.","Attempting to log in with SQL injection payloads.","SQL injection payloads.","Error message is displayed, and the user is not logged in.","N","High"
"STC_004","Security","Test for Session Hijacking","Ensure that session hijacking attempts are detected and prevented.","User is logged in and has an active session.","1. Capture the session ID of the logged-in user. 2. Use a different browser or incognito window to attempt accessing the application with the captured session ID.","Attempting to hijack a user's session.","Captured session ID.","Access is denied, and an error message is displayed.","N","Medium"
"STC_005","Security","Test for Inactivity Timeout","Verify that the system logs out users after a period of inactivity.","User is logged in and has an active session.","1. Log in to the application. 2. Remain inactive for the specified timeout period.","Remaining inactive for the timeout period.","None","User is automatically logged out, and a logout message is displayed.","P","Medium"
"PTC_001","Performance","Load Test - Patient Registration","Simulate multiple patients registering simultaneously to assess the system's performance under normal conditions.","The application is up and running.","1. Simulate 100 users accessing the registration page. 2. Each user fills out the sign-up form with unique data. 3. Each user submits the sign-up form.","Simulate multiple users registering simultaneously.","Unique user data for each of the 100 users.","All users should be able to register successfully within an acceptable response time (e.g., 2 seconds).","P","High"
"PTC_002","Performance","Stress Test - Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of concurrent appointment bookings.","The application is up and running, and there are available appointment slots.","1. Simulate 500 users trying to book appointments concurrently. 2. Each user searches for available appointment slots. 3. Each user selects a slot and confirms the appointment.","Simulate a high number of concurrent appointment bookings.","Available appointment slots and unique user data.","The system should handle the load gracefully, with some users experiencing delays but no system crashes.","P","High"
"PTC_003","Performance","Endurance Test - Continuous Patient Login","Evaluate the system's ability to sustain a prolonged load of continuous patient logins over an extended period.","The application is up and running.","1. Simulate 50 users logging in every minute for 24 hours. 2. Each user logs in with valid credentials.","Simulate continuous user logins over an extended period.","Valid user credentials for each of the 50 users.","All users should be able to log in successfully throughout the test period without any significant performance degradation.","P","Medium"
"PTC_004","Performance","Scalability Test - Increasing Number of Diagnostic Centers","Determine the system's ability to handle an increasing number of diagnostic centers registering and uploading reports.","The application is up and running.","1. Start with 10 diagnostic centers registering and uploading reports. 2. Gradually increase the number of diagnostic centers to 100 in increments of 10. 3. Each diagnostic center uploads reports for 100 patients.","Gradually increase the number of diagnostic centers and their activities.","Unique data for each diagnostic center and patient reports.","The system should handle the increasing load without significant performance degradation.","P","High"
"PTC_005","Performance","Load Test - Concurrent Data Access","Simulate multiple users accessing and updating patient data concurrently to assess data consistency and system performance.","The application is up and running, and there are existing patient records.","1. Simulate 200 users accessing the system concurrently. 2. Each user searches for a specific patient record. 3. Each user updates a field in the patient record (e.g., test results).","Simulate concurrent data access and updates.","Existing patient records and update data.","All users should be able to access and update patient records successfully, with data consistency maintained.","P","High"
"BTC_001","Boundary","Test Minimum Length of Password","Verify that the system allows login with the minimum length password.","None","1. Navigate to the login page. 2. Enter a valid username. 3. Enter a password with the minimum length (e.g., 8 characters). 4. Click the login button.","Entering a password with the minimum length.","Username: valid_username, Password: ""password""","The system should allow the user to login successfully.","P","High"
"BTC_002","Boundary","Test Maximum Length of Password","Verify that the system allows login with the maximum length password.","None","1. Navigate to the login page. 2. Enter a valid username. 3. Enter a password with the maximum length (e.g., 20 characters). 4. Click the login button.","Entering a password with the maximum length.","Username: valid_username, Password: ""password12345678901234567890""","The system should allow the user to login successfully.","P","High"
"BTC_003","Boundary","Test Just Below Minimum Length of Password","Verify that the system does not allow login with a password just below the minimum length.","None","1. Navigate to the login page. 2. Enter a valid username. 3. Enter a password with a length just below the minimum (e.g., 7 characters). 4. Click the login button.","Entering a password with a length just below the minimum.","Username: valid_username, Password: ""passwor""","The system should not allow the user to login and should display an error message.","N","High"
"BTC_004","Boundary","Test Just Above Maximum Length of Password","Verify that the system does not allow login with a password just above the maximum length.","None","1. Navigate to the login page. 2. Enter a valid username. 3. Enter a password with a length just above the maximum (e.g., 21 characters). 4. Click the login button.","Entering a password with a length just above the maximum.","Username: valid_username, Password: ""password123456789012345678901""","The system should not allow the user to login and should display an error message.","N","High"
"BTC_005","Boundary","Test Invalid Input for Password","Verify that the system does not allow login with an invalid input for the password field.","None","1. Navigate to the login page. 2. Enter a valid username. 3. Enter a completely invalid input (e.g., special characters or symbols). 4. Click the login button.","Entering an invalid input for the password field.","Username: valid_username, Password: ""!@#$%^&*()""","The system should not allow the user to login and should display an error message.","in","High"
"CTC_001","Compliance","Verify Patient Data Privacy","Ensure that patient data is securely stored and only accessible to authorized users.","None","1. Log in as a patient. 2. Navigate to the profile section. 3. Attempt to view the profile data. 4. Log out and log in as a different user (e.g., doctor or diagnostic center). 5. Attempt to access the patient's profile data.","Attempt to access patient profile data from different user roles.","Patient profile data, different user credentials.","The system should only allow the patient to view their own profile data. Other users should not be able to access the patient's profile data.","N","High"
"CTC_002","Compliance","Validate Password Requirements","Verify that the system enforces strong password policies.","None","1. Navigate to the registration page. 2. Attempt to create a new account with a weak password (e.g., ""12345""). 3. Attempt to create a new account with a strong password (e.g., ""P@ssw0rd123"").","Attempt to create accounts with different password strengths.","Weak and strong passwords.","The system should reject the weak password and accept the strong password.","N","High"
"CTC_003","Compliance","Ensure Data Integrity During Appointment Booking","Verify that the system maintains data integrity when booking appointments.","A patient is logged in.","1. Search for a doctor and view available time slots. 2. Book an appointment. 3. Verify the appointment details in the system. 4. Attempt to book the same time slot again.","Book an appointment and verify the details.","Doctor information, available time slots.","The system should confirm the appointment and prevent double booking of the same time slot.","P","Medium"
"CTC_004","Compliance","Verify Inactivity Timeout","Ensure that the system logs out users after a period of inactivity.","A user is logged in.","1. Log in to the application. 2. Remain inactive for the specified timeout period (e.g., 15 minutes). 3. Attempt to perform an action that requires authentication.","Remain inactive and attempt an authenticated action.","Inactivity period, authenticated action.","The system should log out the user after the inactivity period and prompt for re-authentication.","P","Medium"
"CTC_005","Compliance","Check Data Classification and Protection","Verify that sensitive data is protectively marked and stored.","A user is logged in.","1. Navigate to the section where sensitive data is stored (e.g., patient records). 2. Attempt to view the sensitive data. 3. Verify that the data is marked and stored securely.","Attempt to view sensitive data and verify its protection.","Sensitive patient data.","The system should display a protective marking on the data and ensure it is stored securely.","P","High"
