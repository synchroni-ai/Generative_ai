"TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"FTC_001","Functional","Verify Patient Registration","Verify that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in the sign-up form with valid details. 3. Submit the form.","Submit the registration form.","Valid patient details (name, email, password, etc.)","The patient should be successfully registered, and a confirmation message should be displayed.","P","High"
"FTC_002","Functional","Verify Doctor Login with Invalid Credentials","Verify that the system handles invalid login credentials for a doctor.","A doctor account should be registered.","1. Navigate to the login page. 2. Enter an incorrect username and/or password. 3. Click the login button.","Attempt to login with incorrect credentials.","Invalid username and/or password.","The system should display an error message indicating invalid credentials.","N","High"
"FTC_003","Functional","Verify Appointment Booking with Boundary Time Slot","Verify that a patient can book an appointment with a boundary time slot.","The patient should be logged in.","1. Navigate to the appointment booking page.","Book an appointment with the first available time slot.","Boundary time slot (e.g., 8:00 AM).","The appointment should be successfully booked, and a confirmation message should be displayed.","in","Medium"
"FTC_004","Functional","Verify Viewing Doctor Qualifications with Filters","Verify that a user can view different doctors' qualifications using filters.","The user should be logged in.","1. Navigate to the doctor qualifications page. 2. Apply filters (e.g., specialization, experience). 3. View the filtered results.","Apply filters to view doctor qualifications.","Filter criteria (specialization, experience, etc.).","The system should display the filtered list of doctors with their qualifications.","P","Medium"
"FTC_005","Functional","Verify Diagnostic Center Logout","Verify that a diagnostic center user can successfully log out from the application.","The diagnostic center user should be logged in.","1. Navigate to the logout option. 2. Click the logout button.","Logout from the application.","None","The user should be successfully logged out, and redirected to the login page.","P","Low"
"NFTC_001","Non-Functional","Verify System Response Time Under Load","This test case aims to validate the system's response time under varying levels of user load to ensure it meets performance requirements.","The application should be deployed in a staging environment with a load testing tool configured.","1. Configure the load testing tool to simulate 1000 concurrent users. 2. Execute the load test focusing on key functionalities such as patient registration, doctor search, and appointment booking. 3. Monitor the system's response time for each transaction.","Simulate user load and monitor response time.","None","The system should maintain an average response time of less than 2 seconds for all transactions.","P","High"
"NFTC_002","Non-Functional","Test Access Control for Different User Roles","This test case ensures that the system enforces proper access control for different user roles (Patient, Doctor, Diagnostic Center).","User accounts for Patient, Doctor, and Diagnostic Center roles should be created.","1. Attempt to log in as a Patient and access Doctor-specific functionalities. 2. Attempt to log in as a Doctor and access Diagnostic Center-specific functionalities. 3. Attempt to log in as a Diagnostic Center and access Patient-specific functionalities.","Attempt to access restricted functionalities.","Valid credentials for each user role.","The system should deny access to functionalities that are not permitted for the logged-in user role.","N","High"
"NFTC_003","Non-Functional","Verify System Availability During Peak Hours","This test case checks the system's availability and functionality during peak usage hours.","The application should be deployed in a production-like environment.","1. Simulate peak usage hours by configuring the load testing tool to simulate high traffic. 2. Perform key functionalities such as patient registration, doctor search, and appointment booking. 3. Monitor the system's availability and response time.","Simulate peak usage and monitor system availability.","None","The system should remain available and responsive with an uptime of 99.9%.","P","High"
"NFTC_004","Non-Functional","Test System Behavior Under Failure Conditions","This test case assesses the system's reliability by simulating failure conditions and observing its behavior.","The application should be deployed in a staging environment with failure simulation tools configured.","1. Simulate a database failure by stopping the database service. 2. Attempt to perform key functionalities such as patient registration and appointment booking. 3. Monitor the system's behavior and error handling.","Simulate database failure and observe system behavior.","None","The system should handle the failure gracefully, display appropriate error messages, and recover within the specified mean time to recovery (MTTR).","N","Medium"
"NFTC_005","Non-Functional","Verify Data Integrity During Concurrent Updates","This test case ensures that the system maintains data integrity when multiple users update the same data concurrently.","The application should be deployed in a staging environment with multiple user accounts configured.","1. Configure two user accounts to update the same patient record concurrently. 2. Monitor the system's behavior and data consistency. 3. Verify the final state of the patient record.","Perform concurrent updates and monitor data consistency.","Patient record data.","The system should maintain data integrity, and the final state of the patient record should reflect the last update correctly.","P","High"
"STC_001","Security","Validate User Login with Correct Credentials","Verify that a registered user can successfully log in with valid credentials.","None","1. Navigate to the login page. 2. Enter valid username and password. 3. Click the login button.","Enter valid credentials and attempt to log in.","Valid username and password.","The user should be successfully logged in and redirected to the dashboard.","P","High"
"STC_002","Security","Prevent Login with Invalid Credentials","Ensure that the system does not allow login with invalid credentials.","None","1. Navigate to the login page. 2. Enter an invalid username and/or password. 3. Click the login button.","Enter invalid credentials and attempt to log in.","Invalid username and/or password.","The system should display an error message and prevent login.","N","High"
"STC_003","Security","Test SQL Injection in Login Form","Verify that the system is resistant to SQL injection attacks through the login form.","None","1. Navigate to the login page. 2. Enter SQL injection payload in the username and/or password fields (e.g., ' OR '1'='1). 3. Click the login button.","Enter SQL injection payload and attempt to log in.","SQL injection payload.","The system should display an error message and prevent login.","N","High"
"STC_004","Security","Test Session Hijacking","Ensure that the system is resistant to session hijacking by invalidating sessions upon logout.","A user is logged in.","1. Log in as a user. 2. Note the session ID from the browser cookies. 3. Log out from the application. 4. Attempt to access the application using the captured session ID.","Attempt to access the application using a captured session ID after logout.","Captured session ID.","The system should invalidate the session and deny access.","N","Medium"
"STC_005","Security","Test Data Exposure in URL Parameters","Verify that sensitive data is not exposed in URL parameters.","A user is logged in and has access to sensitive data.","1. Navigate to a page that displays sensitive data. 2. Observe the URL parameters. 3. Attempt to manipulate the URL parameters to access unauthorized data.","Observe and manipulate URL parameters to access unauthorized data.","URL parameters.","The system should not expose sensitive data in URL parameters and should deny unauthorized access.","N","Medium"
"PTC_001","Performance","Load Test - Patient Registration","Simulate multiple patients registering on the application to assess the system's performance under normal conditions.","None","1. Simulate 100 concurrent users accessing the registration page. 2. Each user fills out the sign-up form with unique data. 3. Each user submits the sign-up form.","Simulate 100 concurrent users registering on the application.","Unique user data for each of the 100 users.","All users should successfully register within an acceptable response time (e.g., 5 seconds).","P","High"
"PTC_002","Performance","Stress Test - Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of concurrent users booking appointments with doctors.","1000 doctors and their available time slots are pre-configured in the system.","1. Simulate 5000 concurrent users trying to book appointments with doctors. 2. Each user searches for a doctor and selects an available time slot. 3. Each user confirms the appointment.","Simulate 5000 concurrent users booking appointments.","Available doctor time slots and unique user data.","The system should handle the load without crashing, and users should receive appropriate responses (e.g., success or failure messages).","P","High"
"PTC_003","Performance","Endurance Test - Diagnostic Center Report Upload","Evaluate the system's ability to sustain a prolonged load of report uploads by diagnostic centers.","10 diagnostic centers are pre-configured in the system.","1. Simulate 10 diagnostic centers uploading reports continuously for 24 hours. 2. Each diagnostic center uploads reports at a rate of 1 report per minute.","Simulate continuous report uploads for 24 hours.","Report data for each diagnostic center.","The system should sustain the load without significant degradation in performance, and all reports should be successfully uploaded.","P","Medium"
"PTC_004","Performance","Scalability Test - Increasing Number of Users","Determine the system's ability to handle an increasing number of concurrent users accessing the application.","The system is stable with 1000 concurrent users.","1. Start with 1000 concurrent users accessing the application. 2. Gradually increase the number of concurrent users by 500 every hour up to 5000 users. 3. Monitor the system's response time and resource utilization.","Gradually increase the number of concurrent users.","None","The system should handle the increasing load with acceptable response times and resource utilization.","P","High"
"PTC_005","Performance","Load Test - Patient Login","Simulate multiple patients logging into the application to assess the system's performance under normal conditions.","1000 patients are pre-registered in the system.","1. Simulate 1000 concurrent users logging into the application. 2. Each user enters their username and password.","Simulate 1000 concurrent users logging into the application.","Valid username and password for each of the 1000 users.","All users should successfully log in within an acceptable response time (e.g., 3 seconds).","P","High"
"BTC_001","Boundary","Test Minimum Length of Password","Verify that the system accepts the minimum length password.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with the minimum length (e.g., 8 characters). 4. Click on the login button.","Entering a password with the minimum length.","Username: valid_username, Password: min_length_password","The system should allow the user to login successfully.","P","High"
"BTC_002","Boundary","Test Maximum Length of Password","Verify that the system accepts the maximum length password.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with the maximum length (e.g., 20 characters). 4. Click on the login button.","Entering a password with the maximum length.","Username: valid_username, Password: max_length_password","The system should allow the user to login successfully.","P","High"
"BTC_003","Boundary","Test Just Below Minimum Length of Password","Verify that the system rejects a password just below the minimum length.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with a length just below the minimum (e.g., 7 characters). 4. Click on the login button.","Entering a password with a length just below the minimum.","Username: valid_username, Password: below_min_length_password","The system should display an error message indicating the password is too short.","N","High"
"BTC_004","Boundary","Test Just Above Maximum Length of Password","Verify that the system rejects a password just above the maximum length.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with a length just above the maximum (e.g., 21 characters). 4. Click on the login button.","Entering a password with a length just above the maximum.","Username: valid_username, Password: above_max_length_password","The system should display an error message indicating the password is too long.","N","High"
"BTC_005","Boundary","Test Invalid Input for Password","Verify that the system rejects a completely invalid input for the password field.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a completely invalid input (e.g., special characters only). 4. Click on the login button.","Entering a completely invalid input for the password.","Username: valid_username, Password: invalid_password","The system should display an error message indicating the password is invalid.","in","High"
"CTC_001","Compliance","Verify Patient Data Privacy","Ensure that patient data is securely stored and only accessible to authorized users.","None","1. Log in as a patient. 2. Navigate to the profile section. 3. Attempt to access another patient's data.","Attempt to access another patient's data.","None","The system should prevent access to another patient's data and display an error message.","N","High"
"CTC_002","Compliance","Validate Password Requirements","Verify that the system enforces strong password policies.","None","1. Navigate to the registration page. 2. Attempt to create an account with a weak password (e.g., ""12345"").","Attempt to create an account with a weak password.","Weak password (""12345"")","The system should display an error message indicating that the password does not meet the requirements.","N","Medium"
"CTC_003","Compliance","Verify Appointment Confirmation","Ensure that the system provides a confirmation for booked appointments and calculates the waiting time accurately.","A doctor's appointment is available.","1. Log in as a patient. 2. Search for a doctor and select an available time slot. 3. Book the appointment.","Book the appointment.","Available doctor and time slot","The system should display a confirmation message and calculate the waiting time accurately.","P","High"
"CTC_004","Compliance","Test Inactivity Timeout","Verify that the system logs out users after a period of inactivity.","User is logged in.","1. Log in as a patient. 2. Remain inactive for the specified timeout period (e.g., 15 minutes). 3. Attempt to perform an action that requires authentication.","Remain inactive for the specified timeout period.","None","The system should log out the user and redirect to the login page.","P","Medium"
"CTC_005","Compliance","Verify Data Integrity During Downtime","Ensure that the system's database remains unscathed during downtime and flags missing data.","The system is experiencing downtime.","1. Simulate a system downtime. 2. Attempt to access the database. 3. Check for any missing data records.","Simulate a system downtime.","None","The system should flag any missing data records and ensure data integrity upon recovery.","P","High"
