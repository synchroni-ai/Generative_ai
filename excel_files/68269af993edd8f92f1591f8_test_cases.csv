"TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"FTC_001","Functional","Verify Patient Registration","Ensure that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in all required fields with valid data. 3. Submit the registration form.","Submit the registration form.","Valid patient details (name, email, password, etc.)","The patient should be successfully registered, and a confirmation message should be displayed.","P","High"
"FTC_002","Functional","Verify Doctor Login with Invalid Credentials","Ensure that the system handles invalid login attempts gracefully.","The doctor is already registered.","1. Navigate to the login page. 2. Enter an incorrect username or password. 3. Click the login button.","Enter incorrect credentials and attempt to login.","Invalid username or password.","The system should display an error message indicating incorrect credentials.","N","Medium"
"FTC_003","Functional","Verify Appointment Booking with Valid Details","Ensure that a patient can successfully book an appointment with a doctor.","The patient is logged in.","1. Navigate to the appointment booking page. 2. Search for a doctor and select a specific time slot. 3. Submit the appointment request.","Submit the appointment request.","Valid doctor details and time slot.","The system should confirm the appointment and display the waiting time.","P","High"
"FTC_004","Functional","Verify Searching Doctor's Qualifications with Filters","Ensure that a user can search for a doctor's qualifications using filters.","The user is logged in.","1. Navigate to the doctor's qualifications search page. 2. Apply filters (e.g., specialization, location). 3. Submit the search query.","Submit the search query with filters.","Valid filter criteria.","The system should display a list of doctors matching the filter criteria.","P","Medium"
"FTC_005","Functional","Verify Diagnostic Center Login with Correct Credentials","Ensure that a diagnostic center can successfully log in with valid credentials.","The diagnostic center is already registered.","1. Navigate to the login page. 2. Enter the correct username and password. 3. Click the login button.","Enter correct credentials and attempt to login.","Valid username and password.","The diagnostic center should be successfully logged in, and the dashboard should be displayed.","P","High"
"NFTC_001","Non-Functional","Verify System Response Time Under Load","Ensure the system maintains acceptable response times under high user load.","The system is deployed in a staging environment with load testing tools configured.","1. Simulate 1000 concurrent users accessing the application. 2. Measure the average response time for key functionalities (e.g., login, appointment booking). 3. Compare the results with the defined performance benchmarks.","Simulate high user load and measure response times.","Performance benchmarks, user load simulation scripts.","The average response time should be within acceptable limits as defined by performance benchmarks.","P","High"
"NFTC_002","Non-Functional","Test Access Control for Different User Roles","Verify that users can only access functionalities permitted by their roles.","User accounts for Patient, Doctor, and Diagnostic Center are created.","1. Log in as a Patient and attempt to access Doctor-specific functionalities. 2. Log in as a Doctor and attempt to access Diagnostic Center-specific functionalities. 3. Log in as a Diagnostic Center and attempt to access Patient-specific functionalities. 4. Verify that access is denied for unauthorized functionalities.","Attempt to access unauthorized functionalities for each user role.","User credentials for different roles.","Access should be denied for unauthorized functionalities.","N","High"
"NFTC_003","Non-Functional","Validate Inactivity Timeout","Ensure the system logs out users after a period of inactivity.","A user is logged into the system.","1. Leave the system idle for the defined inactivity timeout period (e.g., 15 minutes). 2. Attempt to perform an action that requires authentication. 3. Verify that the user is prompted to log in again.","Leave the system idle and attempt an authenticated action.","Inactivity timeout period, user credentials.","The user should be prompted to log in again after the inactivity timeout period.","P","Medium"
"NFTC_004","Non-Functional","Check System Performance with Increasing User Load","Assess how the system performs as the number of users increases.","The system is deployed in a staging environment with load testing tools configured.","1. Start with 100 concurrent users and gradually increase to 1000 users. 2. Monitor system performance metrics (e.g., response time, CPU usage, memory usage). 3. Ensure that the system remains stable and responsive.","Gradually increase user load and monitor performance metrics.","Load testing scripts, performance metrics.","The system should remain stable and responsive with increasing user load.","P","High"
"NFTC_005","Non-Functional","Verify Data Integrity During Concurrent Updates","Ensure that data remains accurate and consistent when multiple users update it concurrently.","Multiple user accounts are created and logged into the system.","1. Have multiple users attempt to update the same data record simultaneously. 2. Verify that the data updates are applied correctly and consistently. 3. Check for any data corruption or inconsistencies.","Perform concurrent data updates and verify data integrity.","User credentials, data records.","Data should remain accurate and consistent after concurrent updates.","P","High"
"STC_001","Security","Verify User Login with Valid Credentials","Ensure that a user can successfully log in with valid username and password.","None","1. Navigate to the login page. 2. Enter a valid username and password. 3. Click the login button.","Login with valid credentials","Valid username and password","The user should be successfully logged in and redirected to the dashboard.","P","High"
"STC_002","Security","Attempt Login with Invalid Credentials","Ensure that the system prevents login with invalid username and password.","None","1. Navigate to the login page. 2. Enter an invalid username and password. 3. Click the login button.","Login with invalid credentials","Invalid username and password","The system should display an error message and prevent login.","N","High"
"STC_003","Security","SQL Injection Attack on Login Form","Verify that the system is resistant to SQL injection attacks through the login form.","None","1. Navigate to the login page. 2. Enter a username with SQL injection code (e.g., ' OR '1'='1). 3. Enter any password. 4. Click the login button.","Attempt SQL injection","Username with SQL injection code","The system should display an error message and prevent login.","N","High"
"STC_004","Security","Session Hijacking Attempt","Ensure that the system is resistant to session hijacking by verifying session tokens.","A user is logged in and has an active session.","1. Capture the session token from the logged-in user's browser. 2. Use a different browser or device to attempt login with the captured session token.","Attempt session hijacking","Captured session token","The system should invalidate the session or prompt for re-authentication.","N","Medium"
"STC_005","Security","Unauthorized Access to Doctor's Information","Ensure that a patient cannot access doctor's information without proper authorization.","A patient is logged in.","1. Navigate to the doctor information page. 2. Attempt to view detailed doctor information.","Attempt unauthorized access","None","The system should display an error message or redirect to an access denied page.","N","High"
"PTC_001","Performance","Load Test - Patient Registration","Simulate multiple patients registering simultaneously to assess the system's performance under normal conditions.","None","1. Simulate 100 concurrent users accessing the registration page. 2. Each user fills out the registration form with unique data. 3. Each user submits the registration form.","Concurrent user registration","Unique registration data for each user","All users should successfully register within an acceptable response time (e.g., 2 seconds).","P","High"
"PTC_002","Performance","Stress Test - Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of concurrent appointment bookings.","Multiple doctors and time slots are available in the system.","1. Simulate 500 concurrent users trying to book appointments with different doctors. 2. Each user searches for available time slots. 3. Each user books an appointment.","Concurrent appointment booking","Available doctor and time slot data","The system should handle the load gracefully, and users should receive appropriate responses (e.g., appointment confirmation or error messages).","P","High"
"PTC_003","Performance","Endurance Test - Continuous Patient Login","Evaluate the system's ability to sustain a prolonged load of patient logins over an extended period.","Multiple patient accounts are available in the system.","1. Simulate 50 concurrent users logging in every minute for 24 hours. 2. Each user logs in using their credentials.","Continuous user login","Valid patient login credentials","All users should successfully log in within an acceptable response time throughout the test duration.","P","Medium"
"PTC_004","Performance","Scalability Test - Increasing Diagnostic Center Users","Determine the system's ability to handle an increasing number of diagnostic center users.","The system is running with a baseline load of diagnostic center users.","1. Start with 10 concurrent diagnostic center users. 2. Gradually increase the number of concurrent users by 10 every 5 minutes up to 100 users. 3. Each user performs various actions such as searching patients, updating records, and uploading reports.","Gradual increase in diagnostic center users","Diagnostic center user data and patient records","The system should handle the increasing load without significant degradation in performance.","P","High"
"PTC_005","Performance","Load Test - Concurrent Report Access","Simulate multiple patients accessing their reports simultaneously to assess the system's performance under normal conditions.","Multiple patient reports are available in the system.","1. Simulate 200 concurrent users accessing their reports. 2. Each user views and downloads their report in PDF format.","Concurrent report access","Patient report data","All users should successfully access and download their reports within an acceptable response time (e.g., 3 seconds).","P","High"
"BTC_001","Boundary","Test Minimum Length of Password","Verify that the system accepts the minimum length password.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with the minimum length (e.g., 8 characters). 4. Click on the login button.","Entering a password with the minimum length.","Username: valid_username, Password: 12345678","The system should allow the user to log in successfully.","P","High"
"BTC_002","Boundary","Test Maximum Length of Password","Verify that the system accepts the maximum length password.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with the maximum length (e.g., 20 characters). 4. Click on the login button.","Entering a password with the maximum length.","Username: valid_username, Password: 12345678901234567890","The system should allow the user to log in successfully.","P","High"
"BTC_003","Boundary","Test Just Below Minimum Length of Password","Verify that the system rejects a password just below the minimum length.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with a length just below the minimum (e.g., 7 characters). 4. Click on the login button.","Entering a password just below the minimum length.","Username: valid_username, Password: 1234567","The system should display an error message indicating the password is too short.","N","High"
"BTC_004","Boundary","Test Just Above Maximum Length of Password","Verify that the system rejects a password just above the maximum length.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a password with a length just above the maximum (e.g., 21 characters). 4. Click on the login button.","Entering a password just above the maximum length.","Username: valid_username, Password: 123456789012345678901","The system should display an error message indicating the password is too long.","N","High"
"BTC_005","Boundary","Test Invalid Input for Password","Verify that the system rejects completely invalid inputs for the password field.","None","1. Navigate to the login page. 2. Enter a username. 3. Enter a completely invalid input (e.g., special characters only). 4. Click on the login button.","Entering a completely invalid input for the password.","Username: valid_username, Password: !@#$%^&*","The system should display an error message indicating the password is invalid.","in","High"
"CTC_001","Compliance","Verify Password Requirements","Ensure that the system enforces password requirements such as length, special characters, expiry, and recycling policies.","None","1. Navigate to the registration page. 2. Attempt to create a new account with a password that does not meet the required criteria (e.g., less than 8 characters, no special characters). 3. Attempt to create a new account with a password that meets all the required criteria.","Create a new account with different password criteria.","Various password inputs (e.g., ""short"", ""nospaces"", ""Password123"").","The system should prevent the creation of an account with a non-compliant password and allow the creation of an account with a compliant password.","N","High"
"CTC_002","Compliance","Verify Data Classification and Protection","Ensure that all data is protectively marked, stored, and protected according to relevant regulations.","The system is operational and has user data.","1. Access the patient's data. 2. Verify that the data is marked and stored securely. 3. Attempt to access the data without proper authorization.","Access and verify the security of patient data.","Patient data records.","The system should securely mark and store data, and prevent unauthorized access.","P","High"
"CTC_003","Compliance","Verify Inactivity Timeout","Ensure that the system enforces inactivity timeouts to prevent unauthorized access.","A user is logged into the system.","1. Log in to the system. 2. Remain inactive for the specified timeout period. 3. Attempt to perform an action that requires authentication.","Remain inactive and attempt to perform an action.","None","The system should log the user out after the inactivity period and require re-authentication.","P","Medium"
"CTC_004","Compliance","Verify Access Permissions for Different User Roles","Ensure that the system enforces correct access permissions for different user roles (Patient, Doctor, Diagnostic Center).","The system is operational and has different user roles.","1. Log in as a Patient. 2. Attempt to access Doctor-specific functionalities. 3. Log in as a Doctor. 4. Attempt to access Diagnostic Center-specific functionalities. 5. Log in as a Diagnostic Center. 6. Attempt to access Patient-specific functionalities.","Log in as different user roles and attempt to access restricted functionalities.","User credentials for different roles.","The system should prevent access to functionalities that are not permitted for the logged-in user role.","N","High"
"CTC_005","Compliance","Verify Data Integrity for Test Reports","Ensure that the system maintains data integrity for test reports to prevent false medication.","The system has test reports for patients.","1. Access a test report for a patient. 2. Verify the accuracy and authenticity of the report. 3. Attempt to modify the report without proper authorization. 4. Verify that the system flags any missing or incorrect data.","Access, verify, and attempt to modify test reports.","Test report data.","The system should maintain accurate and authentic test reports and flag any missing or incorrect data.","P","High"
