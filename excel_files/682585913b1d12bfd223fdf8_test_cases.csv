"TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"FTC_001","Functional","Verify Patient Registration","Verify that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in the sign-up form with valid details. 3. Submit the form.","Submit the sign-up form.","Valid patient details (name, email, password, etc.)","The patient should be successfully registered, and a confirmation message should be displayed.","P","High"
"FTC_002","Functional","Verify Invalid Patient Registration","Verify that the system handles invalid inputs during patient registration.","None","1. Navigate to the registration page. 2. Fill in the sign-up form with invalid details (e.g., invalid email format). 3. Submit the form.","Submit the sign-up form with invalid data.","Invalid patient details (e.g., invalid email format).","The system should display an error message indicating the invalid input.","N","High"
"FTC_003","Functional","Verify Doctor Login","Verify that a doctor can successfully log in to the application.","The doctor must be registered.","1. Navigate to the login page. 2. Enter valid username and password. 3. Click the login button.","Log in with valid credentials.","Valid doctor credentials (username, password).","The doctor should be successfully logged in, and the dashboard should be displayed.","P","High"
"FTC_004","Functional","Verify Invalid Doctor Login","Verify that the system handles invalid login attempts for doctors.","The doctor must be registered.","1. Navigate to the login page. 2. Enter invalid username and/or password. 3. Click the login button.","Log in with invalid credentials.","Invalid doctor credentials (username, password).","The system should display an error message indicating invalid credentials.","N","High"
"FTC_005","Functional","Verify Appointment Booking","Verify that a patient can successfully book an appointment with a diagnostic center.","The patient must be logged in.","1. Navigate to the appointment booking page. 2. Search for available time slots. 3. Select a time slot and confirm the appointment.","Book an appointment.","Available time slot details.","The system should confirm the appointment and calculate the waiting time.","P","High"
"NFTC_001","Non-Functional","Verify System Response Time Under Load","Ensure the application maintains acceptable response times under high user load.","None","1. Simulate a high number of concurrent users (e.g., 1000 users) accessing the application. 2. Monitor the response time for critical functionalities such as login, appointment booking, and report viewing.","Simulate high user load and monitor response times.","None","The application should maintain a response time of less than 3 seconds for all critical functionalities.","P","High"
"NFTC_002","Non-Functional","Test Access Control for Different User Roles","Validate that users can only access functionalities permitted by their roles.","Multiple user accounts with different roles (Patient, Doctor, Diagnostic Center) are created.","1. Log in as a Patient and attempt to access Doctor-specific functionalities. 2. Log in as a Doctor and attempt to access Diagnostic Center-specific functionalities. 3. Log in as a Diagnostic Center and attempt to access Patient-specific functionalities.","Attempt to access restricted functionalities with different user roles.","User credentials for different roles.","The system should deny access to functionalities not permitted by the user's role.","N","High"
"NFTC_003","Non-Functional","Verify Data Integrity During Concurrent Updates","Ensure data integrity when multiple users update the same data concurrently.","Multiple user accounts are created and logged in.","1. User 1 updates a patient's record. 2. User 2 simultaneously updates the same patient's record. 3. Verify the final state of the patient's record.","Concurrently update the same data and verify the final state.","Patient record data.","The final state of the patient's record should reflect the most recent update accurately.","P","Medium"
"NFTC_004","Non-Functional","Test System Behavior During Database Failure","Assess the system's behavior and recovery process during a database failure.","The system is running normally with active users.","1. Simulate a database failure. 2. Monitor the system's behavior and error messages. 3. Restore the database and observe the recovery process.","Simulate a database failure and monitor the system's behavior.","None","The system should handle the failure gracefully, display appropriate error messages, and recover within the specified mean time to recovery.","N","High"
"NFTC_005","Non-Functional","Verify System Scalability with Increasing User Load","Ensure the system can handle an increasing number of users without significant performance degradation.","The system is running normally.","1. Gradually increase the number of concurrent users (e.g., from 100 to 1000 users). 2. Monitor the system's performance metrics such as response time and throughput.","Gradually increase user load and monitor performance metrics.","None","The system should maintain acceptable performance metrics as the user load increases.","P","Medium"
"STC_001","Security","Verify Successful Login with Valid Credentials","Ensure that a user can successfully log in with valid credentials.","None","1. Navigate to the login page. 2. Enter valid username and password. 3. Click on the login button.","Login with valid credentials","Valid username and password","The user should be successfully logged in and redirected to the dashboard.","P","High"
"STC_002","Security","Prevent Login with Invalid Credentials","Ensure that a user cannot log in with invalid credentials.","None","1. Navigate to the login page. 2. Enter invalid username and/or password. 3. Click on the login button.","Login with invalid credentials","Invalid username and/or password","The system should display an error message and prevent access.","N","High"
"STC_003","Security","Test for SQL Injection in Login Form","Ensure that the login form is protected against SQL injection attacks.","None","1. Navigate to the login page. 2. Enter SQL injection payloads in the username and/or password fields (e.g., ' OR '1'='1). 3. Click on the login button.","Attempt SQL injection","SQL injection payloads","The system should display an error message and prevent access.","N","High"
"STC_004","Security","Test for Session Hijacking","Ensure that sessions are properly managed and protected against hijacking.","A user is logged in.","1. Capture the session ID of the logged-in user. 2. Use a different browser or incognito mode to attempt to access the application using the captured session ID. 3. Perform actions that require authentication.","Attempt to hijack a session","Captured session ID","The system should invalidate the session or prompt for re-authentication.","N","Medium"
"STC_005","Security","Test for Cross-Site Scripting (XSS) in User Input Fields","Ensure that user input fields are protected against XSS attacks.","None","1. Navigate to a page with user input fields (e.g., registration form, search form). 2. Enter XSS payloads (e.g., <script>alert('XSS')</script>) in the input fields. 3. Submit the form or perform the action.","Attempt XSS attack","XSS payloads","The system should sanitize the input and prevent the execution of malicious scripts.","N","High"
"PTC_001","Performance","Load Test - Patient Registration","Simulate multiple patients registering on the application to assess the system's performance under normal conditions.","None","1. Simulate 100 concurrent users accessing the registration page. 2. Each user fills out and submits the sign-up form with valid data. 3. Measure the response time and system throughput.","Simulate 100 concurrent users registering.","Valid registration data for 100 users.","The system should handle all registrations within an acceptable response time (e.g., < 3 seconds per registration) and maintain stability.","P","High"
"PTC_002","Performance","Stress Test - Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of concurrent users booking doctor appointments.","1000 doctor profiles and 1000 patient profiles should be pre-created in the system.","1. Simulate 5000 concurrent users attempting to book appointments with available doctors. 2. Measure the system's response time, throughput, and error rate. 3. Identify the breaking point where the system fails to handle the load.","Simulate 5000 concurrent users booking appointments.","Pre-created doctor and patient profiles.","The system should handle the load up to a certain point and gracefully degrade or fail at the breaking point.","P","High"
"PTC_003","Performance","Endurance Test - Diagnostic Center Report Upload","Evaluate the system's ability to sustain a prolonged load of report uploads by diagnostic centers.","10 diagnostic center profiles should be pre-created in the system.","1. Simulate 10 diagnostic centers continuously uploading reports for 24 hours. 2. Each center uploads 10 reports per hour. 3. Monitor the system's performance, resource utilization, and error rate throughout the test.","Simulate continuous report uploads for 24 hours.","Report data for uploading.","The system should maintain stability and performance throughout the test with minimal errors.","P","Medium"
"PTC_004","Performance","Scalability Test - Increasing User Load","Determine the system's ability to handle increasing numbers of concurrent users performing various tasks.","None","1. Start with 100 concurrent users performing random tasks (registration, login, booking appointments, etc.). 2. Gradually increase the number of concurrent users by 100 every 30 minutes up to 1000 users. 3. Measure the system's response time, throughput, and resource utilization at each load level.","Gradually increase the number of concurrent users.","Various task data for users.","The system should handle the increasing load with acceptable performance degradation.","P","High"
"PTC_005","Performance","Load Test - Patient Login","Simulate multiple patients logging into the application to assess the system's performance under normal conditions.","1000 patient profiles should be pre-created in the system.","1. Simulate 500 concurrent users logging into the application. 2. Measure the response time and system throughput. 3. Verify that all users are successfully logged in.","Simulate 500 concurrent users logging in.","Pre-created patient profiles.","The system should handle all logins within an acceptable response time (e.g., < 2 seconds per login) and maintain stability.","P","High"
"BTC_001","Boundary","Test Minimum Length of Username","Verify that the system allows login with the minimum acceptable username length.","None","1. Navigate to the login page. 2. Enter a username with the minimum length (assuming the minimum length is 5 characters, e.g., ""user""). 3. Enter a valid password. 4. Click the login button.","Login with minimum length username","Username: ""user"", Password: ""Password123""","The system should allow the user to log in successfully.","P","High"
"BTC_002","Boundary","Test Maximum Length of Username","Verify that the system allows login with the maximum acceptable username length.","None","1. Navigate to the login page. 2. Enter a username with the maximum length (assuming the maximum length is 20 characters, e.g., ""maximumlengthusername""). 3. Enter a valid password. 4. Click the login button.","Login with maximum length username","Username: ""maximumlengthusername"", Password: ""Password123""","The system should allow the user to log in successfully.","P","High"
"BTC_003","Boundary","Test Username Just Below Minimum Length","Verify that the system does not allow login with a username just below the minimum acceptable length.","None","1. Navigate to the login page. 2. Enter a username with a length just below the minimum (assuming the minimum length is 5 characters, e.g., ""use""). 3. Enter a valid password. 4. Click the login button.","Login with username just below minimum length","Username: ""use"", Password: ""Password123""","The system should display an error message indicating that the username is too short.","N","High"
"BTC_004","Boundary","Test Username Just Above Maximum Length","Verify that the system does not allow login with a username just above the maximum acceptable length.","None","1. Navigate to the login page. 2. Enter a username with a length just above the maximum (assuming the maximum length is 20 characters, e.g., ""maximumlengthusernametest""). 3. Enter a valid password. 4. Click the login button.","Login with username just above maximum length","Username: ""maximumlengthusernametest"", Password: ""Password123""","The system should display an error message indicating that the username is too long.","N","High"
"BTC_005","Boundary","Test Invalid Username Format","Verify that the system does not allow login with an invalid username format.","None","1. Navigate to the login page. 2. Enter a username with an invalid format (e.g., ""user@name""). 3. Enter a valid password. 4. Click the login button.","Login with invalid username format","Username: ""user@name"", Password: ""Password123""","The system should display an error message indicating that the username format is invalid.","in","High"
"CTC_001","Compliance","Verify Patient Data Privacy","Ensure that patient data is securely stored and only accessible to authorized users.","None","1. Log in as a patient. 2. Navigate to the profile section. 3. Attempt to access another patient's data.","Attempt to access another patient's data.","None","The system should deny access and display an error message.","N","High"
"CTC_002","Compliance","Validate Password Requirements","Verify that the system enforces strong password policies.","None","1. Navigate to the registration page. 2. Enter a weak password (e.g., ""12345""). 3. Attempt to submit the form.","Enter a weak password and attempt to submit the form.","Weak password (""12345"")","The system should display an error message indicating that the password does not meet the requirements.","N","High"
"CTC_003","Compliance","Ensure Data Integrity During Appointment Booking","Verify that the system accurately processes and stores appointment data.","A patient is logged in.","1. Search for a doctor and select an available time slot. 2. Book the appointment. 3. Verify the appointment details in the system.","Book an appointment and verify the details.","Doctor's information, available time slot","The system should accurately display the appointment details and store them correctly.","P","High"
"CTC_004","Compliance","Check Inactivity Timeout","Verify that the system logs out users after a period of inactivity.","A user is logged in.","1. Remain inactive for the specified timeout period (e.g., 15 minutes). 2. Attempt to perform an action that requires authentication.","Remain inactive and attempt to perform an action.","None","The system should log out the user and redirect to the login page.","P","Medium"
"CTC_005","Compliance","Verify Access Control for Diagnostic Center","Ensure that only authorized diagnostic centers can access and update patient records.","A diagnostic center is registered.","1. Log in as a diagnostic center. 2. Attempt to access and update a patient's record. 3. Log in as a different diagnostic center and attempt to access the same patient's record.","Access and update a patient's record from different diagnostic centers.","Patient's record, diagnostic center credentials","Only the authorized diagnostic center should be able to access and update the patient's record.","P","High"
