name: SonarQube Code Quality - Django Backend

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Adjust as needed

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest

      # Run Flake8 (Linting)
      - name: Run Flake8
        run: |
          flake8 . || true

      # Run Black (Formatter Check)
      - name: Run Black
        run: |
          black --check . || true

      # Run Tests with Pytest
      - name: Run Tests
        run: |
          pytest || true

      # Debug: Check directory structure
      - name: Debug Directory Structure
        run: |
          pwd
          ls -la

      # Add sonar-project.properties file
      - name: Configure SonarQube
        run: |
          echo "sonar.projectKey=Genback-ai" > sonar-project.properties
          echo "sonar.projectName=Genback-ai" >> sonar-project.properties
          echo "sonar.projectVersion=1.0" >> sonar-project.properties
          echo "sonar.sourceEncoding=UTF-8" >> sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties
          echo "sonar.inclusions=**/*.py,**/*.yml,**/*.txt,**/*.md" >> sonar-project.properties
          echo "sonar.exclusions=**/__pycache__/**,**/*.pdf" >> sonar-project.properties

      # Run SonarQube Scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.0.0
        env:
          SONAR_HOST_URL: https://sonarq.synchroni.xyz
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GENBACKAI }}
        with:
          args: -Dsonar.projectKey=Genback-ai

      # Check SonarQube Quality Gate Status
      - name: Verify SonarQube Quality Gate
        run: |
          echo "Checking SonarQube Quality Gate Status..."
          sleep 10

          STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN_GENBACKAI }}: \
            "https://sonarq.synchroni.xyz/api/qualitygates/project_status?projectKey=Genback-ai" | jq -r '.projectStatus.status')

          echo "Quality Gate Status: $STATUS"
          echo "status=$STATUS" >> $GITHUB_ENV

          if [[ "$STATUS" == "ERROR" ]]; then
            echo "SonarQube Quality Gate Failed! Blocking merge."
            exit 1
          else
            echo "SonarQube Quality Gate Passed!"
          fi

      # Send Notification to Teams
      - name: Send Notification to Teams
        run: |
          SONARQUBE_REPORT_URL="https://sonarq.synchroni.xyz/dashboard?id=Genback-ai"

          curl -H "Content-Type: application/json" -d '{
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "summary": "SonarQube Scan Completed",
            "themeColor": "0076D7",
            "title": "SonarQube Scan Completed",
            "text": "SonarQube scan completed for Genback-ai. Click below to view the report.",
            "sections": [
              {
                "activityTitle": "Quality Gate Result",
                "text": "'"${{ env.status }}"'"
              }
            ],
            "potentialAction": [
              {
                "@type": "OpenUri",
                "name": "View Report",
                "targets": [
                  {
                    "os": "default",
                    "uri": "'"${SONARQUBE_REPORT_URL}"'"
                  }
                ]
              }
            ]
          }' ${{ secrets.TEAMS_WEBHOOK_URL }}
