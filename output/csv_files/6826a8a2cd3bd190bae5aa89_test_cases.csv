"Category","TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"functional","FTC_001","Functional","Verify Patient Registration","Verify that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in the registration form with valid details. 3. Submit the registration form.","Submit the registration form.","Valid patient details (e.g., name, email, password)","The patient should be successfully registered, and a confirmation message should be displayed.","P","High"
"functional","FTC_002","Functional","Verify Invalid Patient Registration","Verify that the system handles invalid inputs during patient registration.","None","1. Navigate to the registration page. 2. Fill in the registration form with invalid details (e.g., missing required fields, invalid email format). 3. Submit the registration form.","Submit the registration form with invalid details.","Invalid patient details (e.g., missing name, invalid email format)","The system should display error messages for the invalid fields and prevent registration.","N","High"
"functional","FTC_003","Functional","Verify Doctor Login","Verify that a doctor can successfully log in to the application.","The doctor must be registered in the system.","1. Navigate to the login page. 2. Enter valid username and password. 3. Click the login button.","Enter valid credentials and log in.","Valid doctor credentials (username and password)","The doctor should be successfully logged in, and the dashboard should be displayed.","P","High"
"functional","FTC_004","Functional","Verify Invalid Doctor Login","Verify that the system handles invalid login attempts for doctors.","The doctor must be registered in the system.","1. Navigate to the login page. 2. Enter invalid username and/or password. 3. Click the login button.","Enter invalid credentials and attempt to log in.","Invalid doctor credentials (e.g., incorrect password)","The system should display an error message indicating invalid credentials and prevent login.","N","High"
"functional","FTC_005","Functional","Verify Appointment Booking","Verify that a patient can successfully book an appointment with a diagnostic center.","The patient must be logged in.","1. Navigate to the appointment booking page. 2. Search for available time slots. 3. Select a time slot and confirm the appointment.","Book an appointment.","Available time slot details","The appointment should be successfully booked, and a confirmation message should be displayed along with the waiting time.","P","High"
"non-functional","NFTC_001","Non-Functional","Validate System Response Time Under Load","Test the system's response time when multiple users are accessing the application simultaneously.","The application should be deployed in a staging environment with a load testing tool configured.","1. Configure the load testing tool to simulate 1000 concurrent users. 2. Execute the load test on the application. 3. Monitor the system's response time for key functionalities such as login, appointment booking, and report viewing.","Execute load test and monitor response time.","1000 concurrent users","The system should maintain an average response time of less than 2 seconds for all key functionalities.","P","High"
"non-functional","NFTC_002","Non-Functional","Test Access Control for Different User Roles","Verify that users can only access functionalities permitted by their roles.","User accounts for Patient, Doctor, and Diagnostic Center roles should be created.","1. Log in as a Patient user. 2. Attempt to access Doctor-specific functionalities (e.g., manage appointments). 3. Log in as a Doctor user. 4. Attempt to access Diagnostic Center-specific functionalities (e.g., upload reports). 5. Log in as a Diagnostic Center user. 6. Attempt to access Patient-specific functionalities (e.g., view reports).","Attempt to access restricted functionalities.","User credentials for different roles","The system should deny access to functionalities not permitted by the user's role.","N","High"
"non-functional","NFTC_003","Non-Functional","Verify Data Integrity During Concurrent Updates","Ensure that data remains accurate and authentic when multiple users update the same record simultaneously.","The application should be deployed in a staging environment with multiple user accounts.","1. Configure two user accounts to update the same patient record simultaneously. 2. Monitor the system's behavior during the concurrent updates. 3. Verify the final state of the patient record.","Perform concurrent updates on the same record.","Patient record data","The system should handle concurrent updates gracefully, and the final state of the record should reflect the last update accurately.","P","Medium"
"non-functional","NFTC_004","Non-Functional","Assess System Behavior During Database Failure","Test the system's reliability by simulating a database failure and observing its behavior.","The application should be deployed in a staging environment with a controlled database failure simulation.","1. Simulate a database failure. 2. Attempt to perform key functionalities such as login, appointment booking, and report viewing. 3. Monitor the system's behavior and error handling.","Simulate database failure and perform key functionalities.","None","The system should handle the database failure gracefully, display appropriate error messages, and recover quickly once the database is restored.","N","High"
"non-functional","NFTC_005","Non-Functional","Verify System Scalability with Increasing User Load","Test the system's ability to handle an increasing number of users and maintain performance.","The application should be deployed in a staging environment with a load testing tool configured.","1. Configure the load testing tool to simulate an increasing number of users (e.g., 100, 500, 1000, 2000). 2. Execute the load test for each user load increment. 3. Monitor the system's response time and resource utilization.","Execute load test with increasing user load.","Increasing number of users","The system should maintain acceptable performance and resource utilization as the user load increases.","P","High"
"security","STC_001","Security","Validate User Login with Correct Credentials","Verify that a user can successfully log in with valid credentials.","None","1. Navigate to the login page. 2. Enter valid username and password. 3. Click on the login button.","Enter valid username and password and click login.","Valid username and password","The user should be successfully logged in and redirected to the dashboard.","P","High"
"security","STC_002","Security","Attempt Login with Invalid Credentials","Verify that the system prevents login with invalid credentials.","None","1. Navigate to the login page. 2. Enter an invalid username and/or password. 3. Click on the login button.","Enter invalid username and/or password and click login.","Invalid username and/or password","The system should display an error message and prevent login.","N","High"
"security","STC_003","Security","Test SQL Injection in Login Form","Verify that the system is resistant to SQL injection attacks through the login form.","None","1. Navigate to the login page. 2. Enter SQL injection code in the username and/or password field (e.g., ' OR '1'='1). 3. Click on the login button.","Enter SQL injection code in the username and/or password field and click login.","SQL injection code","The system should display an error message and prevent login.","N","High"
"security","STC_004","Security","Test Session Hijacking","Verify that the system is resistant to session hijacking by invalidating the session upon logout.","User is logged in.","1. Log in with valid credentials. 2. Note the session ID. 3. Log out from the application. 4. Attempt to access the application using the noted session ID.","Attempt to access the application using the noted session ID after logout.","Session ID","The system should not allow access and should display an error message or redirect to the login page.","N","Medium"
"security","STC_005","Security","Test Data Exposure in URL Parameters","Verify that sensitive data is not exposed in URL parameters.","User is logged in and has access to sensitive data.","1. Navigate to a page that displays sensitive data. 2. Observe the URL parameters. 3. Attempt to manipulate the URL parameters to access unauthorized data.","Observe and manipulate URL parameters.","URL parameters","The system should not expose sensitive data in URL parameters and should prevent unauthorized access.","N","Medium"
"performance","PTC_001","Performance","Load Test - Patient Registration","Simulate multiple patients registering simultaneously to assess the system's performance under normal conditions.","The application is deployed and running.","1. Simulate 100 concurrent users accessing the registration page. 2. Each user fills out the registration form with unique data. 3. All users submit the registration form simultaneously.","Concurrent user registration.","Unique registration data for each user.","All users should successfully register within an acceptable response time (e.g., < 5 seconds).","P","High"
"performance","PTC_002","Performance","Stress Test - Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of users booking appointments simultaneously.","The application is deployed and running with a sufficient number of doctors available for appointments.","1. Simulate 500 concurrent users attempting to book appointments with various doctors. 2. Each user searches for a doctor and selects an available time slot. 3. All users submit their appointment requests simultaneously.","Concurrent appointment booking.","Doctor availability data and unique user data.","The system should handle the load gracefully, and users should receive appropriate responses (e.g., appointment confirmation or error messages).","P","High"
"performance","PTC_003","Performance","Endurance Test - Continuous Patient Login","Evaluate the system's ability to sustain a prolonged load of patients logging in continuously over an extended period.","The application is deployed and running.","1. Simulate 50 users logging in continuously for 24 hours. 2. Each user logs in with valid credentials and performs basic actions (e.g., view profile, search doctors).","Continuous user login and basic actions.","Valid user credentials.","The system should remain stable and responsive throughout the test period, with no significant degradation in performance.","P","Medium"
"performance","PTC_004","Performance","Scalability Test - Increasing Diagnostic Center Load","Determine the system's ability to handle an increasing number of diagnostic centers uploading reports concurrently.","The application is deployed and running.","1. Start with 10 diagnostic centers uploading reports concurrently. 2. Gradually increase the number of diagnostic centers by 10 every 5 minutes until the system reaches its limit. 3. Each diagnostic center uploads 10 reports simultaneously.","Concurrent report uploading by an increasing number of diagnostic centers.","Diagnostic reports data.","The system should handle the increasing load gracefully, and reports should be uploaded successfully within an acceptable response time.","P","High"
"performance","PTC_005","Performance","Load Test - Concurrent User Actions","Simulate multiple users performing various actions concurrently to assess the system's overall performance under normal conditions.","The application is deployed and running.","N/A","Concurrent user actions.","Valid user credentials, doctor data, appointment data, and test report data.","All users should successfully perform their respective actions within an acceptable response time (e.g., < 5 seconds).","P","High"
"boundary","BTC_001","Boundary","Test Minimum Password Length","Verify that the system allows a user to register with the minimum password length.","None","1. Navigate to the registration page. 2. Enter a valid username. 3. Enter a password with the minimum length (e.g., 8 characters). 4. Enter a valid email address. 5. Submit the registration form.","Enter a password with the minimum length.","Username: testuser, Password: 12345678, Email: testuser@example.com","The system should allow registration and display a success message.","P","High"
"boundary","BTC_002","Boundary","Test Maximum Password Length","Verify that the system allows a user to register with the maximum password length.","None","1. Navigate to the registration page. 2. Enter a valid username. 3. Enter a password with the maximum length (e.g., 20 characters). 4. Enter a valid email address. 5. Submit the registration form.","Enter a password with the maximum length.","Username: testuser, Password: 12345678901234567890, Email: testuser@example.com","The system should allow registration and display a success message.","P","High"
"boundary","BTC_003","Boundary","Test Just Below Minimum Password Length","Verify that the system does not allow a user to register with a password length just below the minimum.","None","1. Navigate to the registration page. 2. Enter a valid username. 3. Enter a password with a length just below the minimum (e.g., 7 characters). 4. Enter a valid email address. 5. Submit the registration form.","Enter a password with a length just below the minimum.","Username: testuser, Password: 1234567, Email: testuser@example.com","The system should display an error message indicating the password is too short.","N","High"
"boundary","BTC_004","Boundary","Test Just Above Maximum Password Length","Verify that the system does not allow a user to register with a password length just above the maximum.","None","1. Navigate to the registration page. 2. Enter a valid username. 3. Enter a password with a length just above the maximum (e.g., 21 characters). 4. Enter a valid email address. 5. Submit the registration form.","Enter a password with a length just above the maximum.","Username: testuser, Password: 123456789012345678901, Email: testuser@example.com","The system should display an error message indicating the password is too long.","N","High"
"boundary","BTC_005","Boundary","Test Invalid Password Format","Verify that the system does not allow a user to register with an invalid password format.","None","1. Navigate to the registration page. 2. Enter a valid username. 3. Enter a password with an invalid format (e.g., no special characters). 4. Enter a valid email address. 5. Submit the registration form.","Enter a password with an invalid format.","Username: testuser, Password: 12345678, Email: testuser@example.com","The system should display an error message indicating the password format is invalid.","N","High"
"compliance","CTC_001","Compliance","Verify Patient Data Privacy","Ensure that patient data is securely stored and only accessible to authorized users.","None","1. Log in as a patient. 2. Navigate to the patient profile section. 3. Attempt to access another patient's profile.","Attempt to access another patient's profile.","None","The system should prevent access to another patient's profile and display an error message.","N","High"
"compliance","CTC_002","Compliance","Verify Doctor Registration Compliance","Ensure that doctors can only register with a valid government registration number.","None","1. Navigate to the doctor registration page. 2. Enter an invalid government registration number. 3. Submit the registration form.","Submit the registration form with an invalid government registration number.","Invalid government registration number","The system should display an error message and prevent registration.","N","High"
"compliance","CTC_003","Compliance","Verify Appointment Confirmation","Ensure that appointment confirmations include accurate waiting times and are securely transmitted.","A patient has booked an appointment.","1. Log in as a patient. 2. Navigate to the appointments section. 3. View the details of a booked appointment.","View the details of a booked appointment.","None","The system should display the correct waiting time and confirm the appointment details securely.","P","Medium"
"compliance","CTC_004","Compliance","Verify Data Integrity During Maintenance","Ensure that data integrity is maintained during system maintenance.","The system is scheduled for maintenance.","1. Perform system maintenance. 2. Verify that all data is accurately reflected post-maintenance.","Perform system maintenance.","None","The system should maintain data integrity and reflect accurate data post-maintenance.","P","High"
"compliance","CTC_005","Compliance","Verify Inactivity Timeout","Ensure that the system logs out users after a period of inactivity to prevent unauthorized access.","A user is logged into the system.","1. Log in as a user. 2. Remain inactive for the specified timeout period. 3. Attempt to perform an action that requires authentication.","Attempt to perform an action after the inactivity timeout period.","None","The system should log out the user and prompt them to log in again.","P","High"
