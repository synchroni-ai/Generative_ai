"Category","TCID","Test type","Title","Description","Precondition","Steps","Action","Data","Result","Type (P / N / in)","Test priority"
"functional","FTC_001","Functional","Verify Patient Registration","Verify that a patient can successfully register on the application.","None","1. Navigate to the registration page. 2. Fill in the registration form with valid details. 3. Submit the registration form.","Submit the registration form.","Valid patient details (e.g., name, email, password)","The patient should be successfully registered and redirected to the login page.","P","High"
"functional","FTC_002","Functional","Verify Invalid Patient Registration","Verify that the system handles invalid inputs during patient registration.","None","1. Navigate to the registration page. 2. Fill in the registration form with invalid details (e.g., missing required fields). 3. Submit the registration form.","Submit the registration form with invalid data.","Invalid patient details (e.g., missing name, invalid email format)","The system should display error messages for the invalid fields and not register the patient.","N","High"
"functional","FTC_003","Functional","Verify Doctor Appointment Booking","Verify that a patient can successfully book an appointment with a doctor.","The patient must be logged in.","1. Navigate to the doctor search page. 2. Search for a doctor using valid criteria. 3. Select a doctor and choose an available time slot. 4. Confirm the appointment.","Confirm the appointment.","Valid doctor search criteria and available time slot.","The system should confirm the appointment and display the waiting time.","P","High"
"functional","FTC_004","Functional","Verify Booking Appointment with Invalid Time Slot","Verify that the system handles attempts to book an appointment with an invalid time slot.","The patient must be logged in.","1. Navigate to the doctor search page. 2. Search for a doctor using valid criteria. 3. Attempt to select an invalid or already booked time slot. 4. Try to confirm the appointment.","Attempt to confirm the appointment with an invalid time slot.","Invalid time slot.","The system should display an error message indicating the time slot is not available.","N","Medium"
"functional","FTC_005","Functional","Verify Doctor Login with Invalid Credentials","Verify that the system handles invalid login attempts for doctors.","None","1. Navigate to the login page. 2. Enter invalid username and/or password. 3. Attempt to log in.","Attempt to log in with invalid credentials.","Invalid username and/or password.","The system should display an error message indicating invalid credentials and not log in the doctor.","N","High"
"non-functional","NFTC_001","Non-Functional","Validate System Response Time Under Load","Measure the response time of the application when multiple users are accessing it simultaneously.","The application is deployed and running on the production server.","1. Use a load testing tool to simulate 1000 concurrent users. 2. Monitor the response time for key functionalities such as login, appointment booking, and report viewing.","Simulate load and monitor response time.","None","The response time should be within acceptable limits (e.g., less than 3 seconds for key functionalities).","P","High"
"non-functional","NFTC_002","Non-Functional","Test Access Control for Different User Roles","Verify that users can only access functionalities permitted by their roles.","User accounts for Patient, Doctor, and Diagnostic Center are created.","1. Log in as a Patient and attempt to access Doctor-specific functionalities. 2. Log in as a Doctor and attempt to access Diagnostic Center-specific functionalities. 3. Log in as a Diagnostic Center and attempt to access Patient-specific functionalities.","Attempt to access restricted functionalities.","User credentials for different roles.","Access should be denied for restricted functionalities.","N","High"
"non-functional","NFTC_003","Non-Functional","Verify Data Integrity During Concurrent Updates","Ensure that data remains accurate and authentic when multiple users update it simultaneously.","The application is deployed and running.","1. Simulate two users attempting to update the same patient record concurrently. 2. Monitor the final state of the patient record.","Simulate concurrent updates.","Patient record data.","The final state of the patient record should reflect the most recent update accurately.","P","Medium"
"non-functional","NFTC_004","Non-Functional","Assess System Behavior During Database Failure","Evaluate how the system handles database failures and ensures data survivability.","The application is deployed and running.","1. Simulate a database failure by temporarily shutting down the database server. 2. Attempt to perform key functionalities such as booking an appointment or viewing reports. 3. Monitor system behavior and error messages.","Simulate database failure and perform key functionalities.","None","The system should handle the failure gracefully, display appropriate error messages, and ensure data survivability.","N","High"
"non-functional","NFTC_005","Non-Functional","Validate System Scalability with Increasing User Load","Check the system's performance as the number of users increases.","The application is deployed and running.","1. Start with 100 concurrent users and gradually increase the load to 10,000 users. 2. Monitor the system's response time and resource utilization (CPU, memory, etc.).","Gradually increase user load and monitor performance.","None","The system should maintain acceptable performance levels (e.g., response time within 3 seconds) as the user load increases.","P","High"
"security","STC_001","Security","Validate User Login with Correct Credentials","Verify that a user can successfully log in with valid credentials.","None","1. Navigate to the login page. 2. Enter a valid username and password. 3. Click the login button.","Enter valid credentials and attempt to log in.","Valid username and password","The user should be successfully logged in and redirected to the dashboard.","P","High"
"security","STC_002","Security","Attempt Login with Invalid Credentials","Verify that the system prevents login with invalid credentials.","None","1. Navigate to the login page. 2. Enter an invalid username and password. 3. Click the login button.","Enter invalid credentials and attempt to log in.","Invalid username and password","The system should display an error message and prevent login.","N","High"
"security","STC_003","Security","Test for SQL Injection in Login Form","Verify that the login form is protected against SQL injection attacks.","None","1. Navigate to the login page. 2. Enter a SQL injection string in the username field (e.g., ' OR '1'='1). 3. Enter any password. 4. Click the login button.","Enter a SQL injection string and attempt to log in.","SQL injection string","The system should display an error message and prevent login.","N","High"
"security","STC_004","Security","Test for Session Hijacking","Verify that the system is protected against session hijacking.","A valid user session is active.","1. Log in as a valid user. 2. Capture the session cookie. 3. Log out from the current session. 4. Use the captured session cookie to attempt to access the user's account from a different browser or session.","Attempt to access the user's account using a captured session cookie.","Captured session cookie","The system should invalidate the session and prompt the user to log in again.","N","Medium"
"security","STC_005","Security","Test for Unauthorized Access to Doctor's Information","Verify that a patient cannot access a doctor's information without proper authorization.","A patient is logged into the system.","1. Log in as a patient. 2. Attempt to access a doctor's information page directly by modifying the URL.","Attempt to access a doctor's information page directly by modifying the URL.","URL of a doctor's information page","The system should display an error message or redirect the user to a page indicating unauthorized access.","N","High"
"performance","PTC_001","Performance","Load Test for Patient Registration","Simulate multiple patients registering simultaneously to assess the system's performance under normal conditions.","The application is deployed and accessible.","1. Simulate 100 concurrent users accessing the registration page. 2. Each user fills out the sign-up form with unique data. 3. Each user submits the sign-up form. 4. Measure the response time for each registration process. 5. Monitor system resource utilization (CPU, memory, etc.).","Simulate 100 concurrent users registering.","Unique user data for each of the 100 users.","All users should successfully register with an average response time of less than 5 seconds. System resource utilization should remain within acceptable limits.","P","High"
"performance","PTC_002","Performance","Stress Test for Doctor Appointment Booking","Push the system beyond its limits by simulating a high number of concurrent appointment bookings.","The application is deployed and accessible. Multiple doctors and time slots are available.","1. Simulate 500 concurrent users attempting to book appointments. 2. Each user searches for available doctors and time slots. 3. Each user books an appointment. 4. Measure the response time and success rate of each booking process. 5. Monitor system stability and resource utilization.","Simulate 500 concurrent users booking appointments.","Available doctors and time slots.","The system should handle the load with a success rate of at least 95%. Response time should be monitored, and system stability should be maintained.","P","High"
"performance","PTC_003","Performance","Endurance Test for Diagnostic Center Report Upload","Evaluate the system's ability to sustain a prolonged load of report uploads by a diagnostic center.","The application is deployed and accessible. Diagnostic center is logged in.","1. Simulate continuous report uploads by the diagnostic center for 24 hours. 2. Each report upload should be monitored for success and response time. 3. Monitor system resource utilization and stability over the duration.","Simulate continuous report uploads for 24 hours.","Report data for upload.","All reports should be successfully uploaded with consistent response times. System resource utilization should remain stable.","P","Medium"
"performance","PTC_004","Performance","Scalability Test for Patient Report Access","Determine the system's ability to handle an increasing number of concurrent patients accessing their reports.","The application is deployed and accessible. Reports are available for patients.","1. Start with 100 concurrent users accessing their reports. 2. Gradually increase the number of concurrent users by 100 every 5 minutes up to 1000 users. 3. Measure the response time and success rate for each user accessing their reports. 4. Monitor system resource utilization and stability.","Gradually increase the number of concurrent users accessing reports.","Patient report data.","The system should handle the increasing load with a success rate of at least 95%. Response times should be monitored, and system stability should be maintained.","P","High"
"performance","PTC_005","Performance","Load Test for Doctor Login","Simulate multiple doctors logging in simultaneously to assess the system's performance under normal conditions.","The application is deployed and accessible. Doctor accounts are available.","1. Simulate 200 concurrent doctors logging into the application. 2. Each doctor logs in with their credentials. 3. Measure the response time for each login process. 4. Monitor system resource utilization (CPU, memory, etc.).","Simulate 200 concurrent doctors logging in.","Doctor login credentials.","All doctors should successfully log in with an average response time of less than 3 seconds. System resource utilization should remain within acceptable limits.","P","Medium"
"boundary","BTC_001","Boundary","Test Minimum Password Length","Verify that the system allows a user to create an account with the minimum password length.","None","1. Navigate to the sign-up page. 2. Enter a valid username. 3. Enter a password with the minimum length (e.g., 8 characters). 4. Enter a valid email address. 5. Submit the form.","Enter a password with the minimum length and submit the form.","Username: testuser, Password: 12345678, Email: testuser@example.com","The system should allow the user to create an account successfully.","P","High"
"boundary","BTC_002","Boundary","Test Maximum Password Length","Verify that the system allows a user to create an account with the maximum password length.","None","1. Navigate to the sign-up page. 2. Enter a valid username. 3. Enter a password with the maximum length (e.g., 20 characters). 4. Enter a valid email address. 5. Submit the form.","Enter a password with the maximum length and submit the form.","Username: testuser, Password: 12345678901234567890, Email: testuser@example.com","The system should allow the user to create an account successfully.","P","High"
"boundary","BTC_003","Boundary","Test Just Below Minimum Password Length","Verify that the system does not allow a user to create an account with a password length just below the minimum.","None","1. Navigate to the sign-up page. 2. Enter a valid username. 3. Enter a password with a length just below the minimum (e.g., 7 characters). 4. Enter a valid email address. 5. Submit the form.","Enter a password with a length just below the minimum and submit the form.","Username: testuser, Password: 1234567, Email: testuser@example.com","The system should display an error message indicating that the password is too short.","N","High"
"boundary","BTC_004","Boundary","Test Just Above Maximum Password Length","Verify that the system does not allow a user to create an account with a password length just above the maximum.","None","1. Navigate to the sign-up page. 2. Enter a valid username. 3. Enter a password with a length just above the maximum (e.g., 21 characters). 4. Enter a valid email address. 5. Submit the form.","Enter a password with a length just above the maximum and submit the form.","Username: testuser, Password: 123456789012345678901, Email: testuser@example.com","The system should display an error message indicating that the password is too long.","N","High"
"boundary","BTC_005","Boundary","Test Invalid Input for Password","Verify that the system does not allow a user to create an account with an invalid password format.","None","1. Navigate to the sign-up page. 2. Enter a valid username. 3. Enter a password with an invalid format (e.g., special characters only). 4. Enter a valid email address. 5. Submit the form.","Enter a password with an invalid format and submit the form.","Username: testuser, Password: !@#$%^&*, Email: testuser@example.com","The system should display an error message indicating that the password format is invalid.","N","High"
"compliance","CTC_001","Compliance","Verify Password Requirements","Ensure that the system enforces password requirements such as length, special characters, expiry, and recycling policies.","None","1. Navigate to the registration page. 2. Attempt to create a new user account with a password that does not meet the required criteria (e.g., less than 8 characters, no special characters). 3. Submit the registration form.","Attempt to create a new user account with an invalid password.","Invalid password data (e.g., ""password"")","The system should display an error message indicating that the password does not meet the requirements.","N","High"
"compliance","CTC_002","Compliance","Verify Data Classification and Protection","Ensure that all data is protectively marked, stored, and protected according to relevant regulations.","A user account is created and logged in.","1. Access the patient's personal information section. 2. Verify that sensitive data (e.g., medical records, personal identification information) is encrypted and not visible in plain text.","Access and verify the protection of sensitive data.","None","The system should display encrypted or masked sensitive data, ensuring compliance with data protection regulations.","P","High"
"compliance","CTC_003","Compliance","Verify Inactivity Timeout","Ensure that the system logs out users after a period of inactivity to prevent unauthorized access.","A user is logged into the system.","1. Log in to the application. 2. Remain idle for the specified inactivity timeout period. 3. Attempt to perform an action that requires authentication.","Remain idle and attempt an action after the inactivity timeout.","None","The system should log out the user and prompt them to log in again.","P","Medium"
"compliance","CTC_004","Compliance","Verify Access Permissions for Different User Roles","Ensure that the system enforces correct access permissions for different user roles (Patient, Doctor, Diagnostic Center).","User accounts for Patient, Doctor, and Diagnostic Center are created.","1. Log in as a Patient. 2. Attempt to access Doctor-specific functionalities (e.g., manage appointments). 3. Log in as a Doctor. 4. Attempt to access Diagnostic Center-specific functionalities (e.g., upload reports). 5. Log in as a Diagnostic Center. 6. Attempt to access Patient-specific functionalities (e.g., view reports).","Log in as different user roles and attempt to access restricted functionalities.","None","The system should deny access to functionalities that are not permitted for the logged-in user role.","N","High"
"compliance","CTC_005","Compliance","Verify Data Integrity for Test Reports","Ensure that the system maintains the accuracy and authenticity of test reports to prevent false medication.","Test reports are available in the system.","1. Access the test reports section. 2. Verify that the reports are accurate and match the expected results. 3. Attempt to modify a test report without proper authorization.","Access and verify test reports, and attempt unauthorized modification.","Test report data","The system should display accurate test reports and prevent unauthorized modifications.","P","High"
